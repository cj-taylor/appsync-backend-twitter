name: appsyncmasterclass
schema: schema.api.graphql
authenticationType: AMAZON_COGNITO_USER_POOLS
userPoolConfig:
  awsRegion: us-east-2
  defaultAction: ALLOW
  userPoolId: !Ref CognitoUserPool
mappingTemplatesLocation: mapping-templates
mappingTemplates:
  - type: Query
    field: getMyProfile
    dataSource: usersTable
    # Convention, so we don't need to explicitly add
    # request: Query.getMyProfile.request.vtl
    # response: Query.getMyProfile.response.vtl
  - type: Query
    field: getTweets
    dataSource: tweetsTable
  - type: Query
    field: getMyTimeline
    dataSource: timelinesTable
  - type: Query
    field: getImageUploadUrl
    dataSource: getImageUploadUrlFunction
    # direct integration with Lambda, so we don't need specific templates
    request: false
    response: false

  - type: Mutation
    field: editMyProfile
    dataSource: usersTable
  - type: Mutation
    field: tweet
    dataSource: tweetFunction
    request: false
    response: false

  # NESTED FIELDS
  - type: Tweet
    field: profile
    dataSource: usersTable
  - type: TimelinePage
    field: tweets
    dataSource: tweetsTable

dataSources:
  - type: NONE
    name: NONE
  - type: AMAZON_DYNAMODB
    name: usersTable
    config:
      tableName: !Ref UsersTable
  - type: AWS_LAMBDA
    name: getImageUploadUrlFunction
    config:
      functionName: getImageUploadUrl
  - type: AWS_LAMBDA
    name: tweetFunction
    config:
      functionName: tweet
  - type: AMAZON_DYNAMODB
    name: tweetsTable
    config:
      tableName: !Ref TweetsTable
  - type: AMAZON_DYNAMODB
    name: timelinesTable
    config:
      tableName: !Ref TimelinesTable

substitutions:
  TweetsTable: !Ref TweetsTable
